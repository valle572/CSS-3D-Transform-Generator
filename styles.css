* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

:root {
    --primary: rgba(0, 74, 222, 0.75);
    --primary-solid: rgb(0, 74, 222);
    --primary-light: rgba(0, 74, 222, 0.25);

    --light: #bfbfbf;
    --dark: #101010;
    --white: #bfbfbf;
    --red: #ff0035;

    --nav-title-hei: 2.5rem;
    --sqrt2: 1.41421356237;
    --sqrt3: 1.73205080757;
    --factor: 1;

    /* Card */
    --card-wid: 8rem;
    /* Cube */
    --cube-wid: 8rem;
    /* Hexagonal Prism */
    --hexa-wid: 12rem;
    /* Octahedron */
    --octa-wid: 12rem;
    /* Bucky Ball */
    --buck-hexa-wid: 4rem;
    --buck-hexa-hei: calc(var(--buck-hexa-wid) * (13 / 15));
    --buck-pent-apothem-ratio: 0.68819096023;
    --buck-pent-circumcircle-ratio: 0.85065080835204;
    --buck-unit-angle: 37.5deg;
    --buck-pent-offset: calc(-1 * var(--buck-hexa-hei) * var(--buck-pent-apothem-ratio) / var(--sqrt3));
    --buck-half-dist: calc(1.17 * (var(--buck-hexa-wid)));
    --bucky-offset: -0.95rem;

    --tran-x: 0;
    --tran-y: 0;
    --tran-z: 0;

    --rot-x: 0;
    --rot-y: 0;
    --rot-z: 0;

    --sca-x: 1;
    --sca-y: 1;

    --skew-x: 0;
    --skew-y: 0;

    --pers: 1000;
}

.center-content {
    display: flex;
    justify-content: center;
    align-items: center;
}

body {
    width: 100vw;
    height: 100vh;
    background-color: var(--dark);
    color: var(--light);
    overflow: hidden;
    transition: color 0.5s ease,
     background-color 0.5s ease;
}
body.dark-mode {
    --light: #101010;
    --dark: #bfbfbf;
    --primary: rgba(100, 0, 0, 0.85);
    --primary-solid: rgb(100, 0, 0);
    --primary-light: rgba(100, 0, 0, 0.5);
}


/* Nav =====================================================================*/
nav {
    position: fixed;
    z-index: 100;
    inset: 0;
    background-color: var(--dark);
    transition: opacity 750ms ease;
}
h1 {
    position: absolute;
    width: 100%;
    text-align: center;
    letter-spacing: 1px;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    cursor: default;
    margin-top: 0.5rem;
    color: var(--light);
    opacity: 0.5;
    font-size: 1.25rem;
}
nav h2 {
    width: 100%;
    font-size: 1.5rem;
    line-height: var(--nav-title-hei);
    text-align: center;
    z-index: 100;
    letter-spacing: 2px;
    cursor: default;
}
.nav-bottom {
    width: 100%;
    height: 20%;
}
.nav-cycle-btn {
    background-color: var(--primary-light);
    color: var(--light);
    cursor: pointer;
    padding: 1rem 2rem;
    margin-bottom: 2.5rem;
    border-radius: 999px;
    border: 1px solid var(--primary);
    transition: background-color 250ms ease;
    font-size: 1.25rem;
    touch-action: manipulation;
}
.nav-cycle-btn:hover {
    background-color: var(--primary);
}
.option {
    perspective: 1000px;
    cursor: pointer;
}
.option > div {
    -webkit-animation: spin-3d 10s linear infinite;
            animation: spin-3d 10s linear infinite;
}
.option .card {
    -webkit-animation: card-spin 10s linear infinite;
            animation: card-spin 10s linear infinite;
    opacity: 0.75;
    transition: opacity 500ms ease;
}

.shape-option {
    width: 100%;
    height: calc(80% - var(--nav-title-hei));
    overflow: hidden;
    display: none;
}
.shape-option.active {
    display: flex;
}

/* Option Hover */
.option.card-container:hover .card {
    opacity: 1;
}
body .option.cube-container:hover {
    --factor: 1.5;
}
body .option.hexa-container:hover {
    --factor: 1.25;
}
body .option.octa-container:hover {
    --factor: 10;
}
.option.octa-container:hover .octa-side {
    transform-origin: top center;
    top: 50%;
}
.option.bucky-container:hover {
    --buck-half-dist: calc(var(--buck-hexa-wid) / 2.5)
}

/* Spin Animations */
@-webkit-keyframes card-spin {
    from {
        transform: rotateZ(20deg) rotateY(-60deg);
    }
    to {
        transform: rotateZ(20deg) rotateY(300deg);
    }
}

@keyframes card-spin {
    from {
        transform: rotateZ(20deg) rotateY(-60deg);
    }
    to {
        transform: rotateZ(20deg) rotateY(300deg);
    }
}
@-webkit-keyframes spin-3d {
    from {
        transform: rotate(0, 0);
    }
    to {
        transform: rotateX(360deg) rotateZ(360deg);
    }
}
@keyframes spin-3d {
    from {
        transform: rotate(0, 0);
    }
    to {
        transform: rotateX(360deg) rotateZ(360deg);
    }
}



/* Main ====================================================================*/
main {
    position: fixed;
    z-index: 1;
    inset: 0;
    display: flex;
    flex-direction: column;
}
main > section {
    border: 1px solid var(--primary-solid);
    transition: border 0.5s ease;
}
.object-container {
    width: 100%;
    height: 70%;
    overflow: hidden;
}
.controls {
    padding-top: 2rem;
    overflow-y: scroll;
    flex-direction: column;
    justify-content: flex-start;
    width: 100%;
    height: 30%;
}
ul {
    margin-top: 0.5rem;
    width: calc(95% - 1rem);
    max-width: 25rem;
}
li {
    list-style: none;
    display: flex;
    justify-content: center;
    flex-direction: column;
}

.settings-description {
    letter-spacing: 1px;
    color: transparent;
    padding: 0.5rem 0;
    transition: color 0.5s ease;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
}
.settings-description.active {
    color: var(--light);
}

.settings {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}
.settings li {
    cursor: pointer;
    border: 1px solid var(--primary);
    transition: border 0.5s ease,
     background-color 125ms ease;
}
.settings li:hover {
    background-color: var(--primary-light);
}
.settings svg {
    width: 3.5rem;
    height: 3.5rem;
    padding: 0.5rem;
}

h2 {
    margin-top: 2rem;
    letter-spacing: 2px;
    font-size: 1.75rem;
}
span {
    font-size: 1.25rem;
    letter-spacing: 1px;
    margin-left: 0.25rem;
}


/* Sliders =================================================================*/
input[type=range] {
    background: transparent;
    height: 2rem;
    cursor: pointer;
    width: 100%;
    margin-bottom: 1rem;
}
input[type=range]:focus {
    outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
    background: var(--primary);
    height: 0.75rem;
    border-radius: 999px;
    position: relative;
    -webkit-transition: background-color 0.5s ease;
            transition: background-color 0.5s ease;
}
input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
            appearance: none;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    background: var(--primary-solid);
    border: 0.25rem solid var(--light);
    -webkit-transition: border 0.5s ease,
              background-color 0.5s ease;
            transition: border 0.5s ease,
              background-color 0.5s ease;

    /* Center Thumb for webkit */
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}
input[type=range]::-moz-range-track {
    background: var(--primary);
    height: 0.75rem;
    border-radius: 999px;
    -moz-transition: background-color 0.5s ease;
         transition: background-color 0.5s ease;
}
input[type=range]::-moz-range-thumb {
    -moz-appearance: none;
         appearance: none;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    background: var(--primary-solid);
    border: 0.25rem solid var(--light);
    -moz-transition: border 0.5s ease,
           background-color 0.5s ease;
         transition: border 0.5s ease,
           background-color 0.5s ease;
}

.object {
    cursor: default;
    display: none;
}


/* Card ====================================================================*/
.card-container {
    transition: opacity 500ms ease;
}
.card {
    width: var(--card-wid);
    height: calc(var(--card-wid) * 1.5);
    background-color: var(--primary-solid);
    padding: 1rem;
    text-align: center;
    font-size: 2rem;
    color: var(--white);
    transition: color 0.5s ease,
     background-color 0.5s ease;
}


/* Cube ====================================================================*/
.cube-container {
    perspective-origin: 50% -100%;
}
.cube {
    width: var(--cube-wid);
    height: var(--cube-wid);
    transform-style: preserve-3d;
    position: relative;
}
.cube-face {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--primary);
    color: var(--white);
    box-shadow: inset 0 0 3rem 1rem rgba(0, 0, 0, .6);
    transition: transform 500ms ease,
          background-color 0.5s ease,
                     color 0.5s ease;
    display: flex;
    justify-content: center;
    align-items: center;
}
#cube-top {
    transform: rotateX(90deg) translateZ(calc(var(--cube-wid) / 2 * var(--factor)));
}
#cube-bottom {
    transform: rotateX(-90deg) translateZ(calc(var(--cube-wid) / 2 * var(--factor)));
}  
#cube-right {
    transform: rotateY(90deg) translateZ(calc(var(--cube-wid) / 2 * var(--factor)));
}  
#cube-left {
    transform: rotateY(-90deg) translateZ(calc(var(--cube-wid) / 2 * var(--factor)));
}  
#cube-front {
    transform: rotateX(0deg) translateZ(calc(var(--cube-wid) / 2 * var(--factor)));
}  
#cube-back {
    transform: rotateY(180deg) translateZ(calc(var(--cube-wid) / 2 * var(--factor)));
}


/* Hexagonal Prism =========================================================*/
.hexa-container {
    perspective-origin: 50% -100%;
}
.hexagon {
    width: var(--hexa-wid);
    height: var(--hexa-wid);
    transform-style: preserve-3d;
    position: relative;
}
.hexa-side,
.hexa-face {
    position: absolute;
    background-color: var(--primary);
    transition: transform 500ms ease,
          background-color 0.5s ease,
                     color 0.5s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--white);
}
.hexa-face {
    box-shadow: inset 0 0 calc(var(--hexa-wid) / 3) rgba(0, 0, 0, .75);
    width: 100%;
    height: 100%;
    -webkit-clip-path: polygon(100% 50%, 75% 93.3%, 25% 93.3%, 0% 50%, 25% 6.7%, 75% 6.7%);
            clip-path: polygon(100% 50%, 75% 93.3%, 25% 93.3%, 0% 50%, 25% 6.7%, 75% 6.7%);
}
.hexa-side {
    width: calc(var(--hexa-wid) / 2);
    height: calc(var(--hexa-wid) / 4);
    top: 50%;
    left: 50%;
    box-shadow: inset 0 0 3rem rgba(0, 0, 0, .65);
}
#hexa-top {
    transform: translateZ(calc(var(--hexa-wid) / 8 * var(--factor)));
}
#hexa-one {
    transform: translate(-50%, -50%) rotateX(90deg) translateZ(calc(var(--sqrt3) / 4 * var(--hexa-wid) * var(--factor)));
}
#hexa-two {
    transform: translate(-50%, -50%) rotateZ(-60deg) rotateX(90deg) translateZ(calc(var(--sqrt3) / 4 * var(--hexa-wid) * var(--factor)));
}
#hexa-thr {
    transform: translate(-50%, -50%) rotateZ(-120deg) rotateX(90deg) translateZ(calc(var(--sqrt3) / 4 * var(--hexa-wid) * var(--factor)));
}
#hexa-fou {
    transform: translate(-50%, -50%) rotateZ(-180deg) rotateX(90deg) translateZ(calc(var(--sqrt3) / 4 * var(--hexa-wid) * var(--factor)));
}
#hexa-fiv {
    transform: translate(-50%, -50%) rotateZ(-240deg) rotateX(90deg) translateZ(calc(var(--sqrt3) / 4 * var(--hexa-wid) * var(--factor)));
}
#hexa-six {
    transform: translate(-50%, -50%) rotateZ(60deg) rotateX(90deg) translateZ(calc(var(--sqrt3) / 4 * var(--hexa-wid) * var(--factor)));
}
#hexa-bot {
    transform: rotateX(180deg) translateZ(calc(var(--hexa-wid) / 8 * var(--factor)));
}


/* Octahedron ==============================================================*/
.octa-container {
    perspective-origin: 50% -25%;
}
.octahedron {
    width: var(--octa-wid);
    height: var(--octa-wid);
    transform-style: preserve-3d;
    position: relative;
}
.octa-side {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    top: calc(-25% + (1rem * var(--sqrt2)));
    left: 50%;
    width: calc(var(--octa-wid));
    height: calc(var(--octa-wid) / 2 * var(--sqrt2));
    transform: translateX(-50%);
    transform-origin: bottom center;
    background-color: var(--primary);
    color:  var(--white);
    font-size: 1.25rem;
    letter-spacing: 1px;
    border-top: 1rem solid var(--primary-light);
    border-bottom: 0.5rem solid var(--primary-light);
    -webkit-clip-path: polygon(50% 0, 0 100%, 100% 100%);
            clip-path: polygon(50% 0, 0 100%, 100% 100%);
    box-shadow: inset 0 calc(var(--octa-wid) / 2)
                        calc(var(--octa-wid) / 4)
                        rgba(0, 0, 0, 0.5);
    transition: transform 1s ease,
         transform-origin 1s ease,
                      top 1s ease,
                  color 0.5s ease,
                 border 0.5s ease,
       background-color 0.5s ease;
}
#octa-one {
    transform: translateX(-50%) translateZ(calc(var(--octa-wid) / 2 / var(--factor))) rotateX(45deg);
}
#octa-two {
    transform: translateX(-50%) rotateY(90deg) translateZ(calc(var(--octa-wid) / 2 / var(--factor))) rotateX(45deg);
}
#octa-thr {
    transform: translateX(-50%) rotateY(180deg) translateZ(calc(var(--octa-wid) / 2 / var(--factor))) rotateX(45deg);
}
#octa-fou {
    transform: translateX(-50%) rotateY(-90deg) translateZ(calc(var(--octa-wid) / 2 / var(--factor))) rotateX(45deg);
}
#octa-fiv {
    transform: translate(-50%, -1px) translateZ(calc(var(--octa-wid) / 2 / var(--factor))) rotateY(180deg) rotateX(225deg);
}
#octa-six {
    transform: translate(-50%, -1px) rotateY(90deg) translateZ(calc(var(--octa-wid) / -2 / var(--factor))) rotateX(225deg);
}
#octa-sev {
    transform: translate(-50%, -1px) translateZ(calc(var(--octa-wid) / -2 / var(--factor))) rotateX(225deg);
}
#octa-eig {
    transform: translate(-50%, -1px) rotateY(-90deg) translateZ(calc(var(--octa-wid) / -2 / var(--factor))) rotateX(225deg);
}


/* Bucky Ball (Buckminsterfullerene) =======================================*/
nav .bucky-container {
    width: calc(2.5 * var(--buck-hexa-wid));
    height: calc(2.5 * var(--buck-hexa-wid));
}
.bucky-ball {
    transform-style: preserve-3d;
    position: relative;
}
.bucky-half {
    position: absolute;
    top: 50%;
    left: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    width: calc(var(--buck-hexa-hei) / 2);
    height: calc(var(--buck-hexa-hei) / 2);
    border: calc(var(--buck-hexa-hei) / 20) solid var(--red);
    background-color: var(--primary);
    border-radius: 50%;
    transition: border 0.5s ease,
               transform 1s ease,
      background-color 0.5s ease;
    transform: translateX(var(--bucky-offset)) translateY(var(--bucky-offset)) translateZ(var(--buck-half-dist));
    transform-style: preserve-3d;
}
.bucky-half:last-of-type {
    transform: translateX(var(--bucky-offset)) translateY(var(--bucky-offset)) rotateZ(36deg) rotateY(180deg) translateZ(var(--buck-half-dist));
}
.buck-hexa {
    position: absolute;
    background-color: var(--primary);
    transition: color 0.5s ease,
            transform 0.5s ease,
     background-color 0.5s ease;
    width: var(--buck-hexa-wid);
    height: var(--buck-hexa-hei);
    -webkit-clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
            clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    transform-origin: bottom;
    color: var(--white);
    display: grid;
    justify-items: center;
    align-items: center;
}
.buck-hexa-2 {
    transform: translateY(calc(-1 * var(--buck-hexa-hei))) rotateX(calc(1.1 * var(--buck-unit-angle)));
}
.buck-pent {
    display: grid;
    justify-items: center;
    align-items: center;
    position: absolute;
    transition: color 0.5s ease,
            transform 0.5s ease,
     background-color 0.5s ease;
    background-color: var(--primary);
    color: var(--red);
    width: calc(0.95 * var(--buck-hexa-wid) * var(--buck-pent-circumcircle-ratio));
    height: calc(1.94 * var(--buck-hexa-wid) / var(--sqrt3) * var(--buck-pent-apothem-ratio));
    -webkit-clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
            clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
    top: 50%;
    left: 50%;
    transform-origin: top;
    transform: translateX(calc(var(--buck-hexa-hei) / 2 / var(--sqrt3) - 50%)) rotateZ(-90.75deg) rotateY(calc(0.55 * var(--buck-unit-angle))) rotateX(calc(-0.85 * var(--buck-unit-angle))) ;
}

.buck-section {
    width: calc(var(--buck-hexa-wid) * 2);
    height: calc(var(--buck-hexa-hei) * 2);
    display: flex;
    justify-content: center;
    align-items: flex-end;
    position: absolute;
    transform-origin: bottom;
    transform-style: preserve-3d;
}
.buck-section.first {
    transform: translateY(calc(var(--buck-pent-offset) - var(--buck-hexa-hei))) rotateX(var(--buck-unit-angle));
}
.buck-section.second {
    transform: translateY(calc(-1 * var(--buck-hexa-hei))) rotateZ(72deg) translateY(var(--buck-pent-offset)) rotateX(var(--buck-unit-angle));
}
.buck-section.third {
    transform: translateY(calc(-1 * var(--buck-hexa-hei))) rotateZ(-72deg) translateY(var(--buck-pent-offset)) rotateX(var(--buck-unit-angle));
}
.buck-section.fourth {
    transform: translateY(calc(-1 * var(--buck-hexa-hei))) rotateZ(144deg) translateY(var(--buck-pent-offset)) rotateX(var(--buck-unit-angle));
}
.buck-section.fifth {
    transform: translateY(calc(-1 * var(--buck-hexa-hei))) rotateZ(-144deg) translateY(var(--buck-pent-offset)) rotateX(var(--buck-unit-angle));
}



/* Footer ==================================================================*/
footer {
    margin: 1rem 0;
    width: 100%;
    height: 2rem;
}
footer > p {
    width: 100%;
    color: var(--light);
    text-align: center;
    opacity: 0.5;
    letter-spacing: 1px;
}


/* Transforms ==============================================================*/

.object.active {
    display: initial;
}
.object {
    perspective: calc(var(--pers) * 1px);
    transition: color 0.5s ease,
     background-color 0.5s ease;
}
.object > div {
    transform:
    translate3d(
        calc(var(--tran-x) * 1px),
        calc(var(--tran-y) * 1px),
        calc(var(--tran-z) * 1px)
    )
    rotateX(
        calc(var(--rot-x) * 1deg)
    )
    rotateY(
        calc(var(--rot-y) * 1deg)
    )
    rotateZ(
        calc(var(--rot-z) * 1deg)
    )
    scale(
        var(--sca-x),
        var(--sca-y)
    )
    skew(
        calc(var(--skew-x) * 1deg),
        calc(var(--skew-y) * 1deg)
    );
}


/* Responsive Design =======================================================*/

@media (min-width: 900px) {
    body {
        --cube-wid: 16rem;
        --card-wid: 16rem;
        --hexa-wid: 20rem;
        --octa-wid: 20rem;
        --buck-hexa-wid: 8rem;
        --buck-hexa-hei: calc(var(--buck-hexa-wid) * (13 / 15));
        --buck-pent-offset: calc(-1 * var(--buck-hexa-hei) * var(--buck-pent-apothem-ratio) / var(--sqrt3));
        --buck-half-dist: calc(1.17 * (var(--buck-hexa-wid)));
        --bucky-offset: -1.75rem;
    }
    .cube-face {
        font-size: 1.5rem;
    }
    main {
        flex-direction: row;
    }
    main > section {
        min-height: 100%;
    }
    .controls {
        width: 40%;
    }
    .object-container {
        width: 60%;
    }
    .shape-option .card {
        font-size: 2rem;
    }
    
}
@media (min-width: 1200px) {

    .controls {
        width: 30rem;
    }
    .object-container {
        width: calc(100% - 30rem);
    }
}